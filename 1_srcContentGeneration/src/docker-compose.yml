version: '3.8'

name: content-generation

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app:delegated
      - node_modules_backend:/app/node_modules
    environment:
      - NODE_ENV=production
      - CORS_ORIGIN=http://103.253.20.13:25007
    restart: unless-stopped
    networks:
      - content-gen-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/api/health', (r) => process.exit(r.statusCode > 299))"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    ports:
      - "25007:25007"
    volumes:
      - ./frontend:/app:delegated
      - node_modules_frontend:/app/node_modules
    environment:
      - NODE_ENV=production
      - BACKEND_URL=http://backend:3000
      - API_URL=http://backend:3000
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - content-gen-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:25007', (r) => process.exit(r.statusCode > 299))"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 40s

volumes:
  node_modules_backend:
  node_modules_frontend:

networks:
  content-gen-network:
    name: content-gen-network
